/// Grid system
//
// Generate semantic grid columns with these mixins.

@mixin make-container() ***REMOVED***
  margin-right: auto;
  margin-left: auto;
  padding-right: ($grid-gutter-width / 2);
  padding-left:  ($grid-gutter-width / 2);
  width: 100%;
***REMOVED***


// For each breakpoint, define the maximum width of the container in a media query
@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) ***REMOVED***
  @each $breakpoint, $container-max-width in $max-widths ***REMOVED***
    @include media-breakpoint-up($breakpoint, $breakpoints) ***REMOVED***
      max-width: $container-max-width;
***REMOVED***
***REMOVED***
***REMOVED***

@mixin make-row() ***REMOVED***
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left:  ($grid-gutter-width / -2);
***REMOVED***

@mixin make-col-ready() ***REMOVED***
  position: relative;
  // Prevent columns from becoming too narrow when at smaller grid tiers by
  // always setting `width: 100%;`. This works because we use `flex` values
  // later on to override this initial width.
  width: 100%;
  min-height: 1px; // Prevent collapsing
  padding-right: ($grid-gutter-width / 2);
  padding-left:  ($grid-gutter-width / 2);
***REMOVED***

@mixin make-col($size, $columns: $grid-columns) ***REMOVED***
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
***REMOVED***
